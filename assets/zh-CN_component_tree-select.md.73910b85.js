import{_ as e,c as t,o as a,e as l}from"./app.0e4eb262.js";const b='{"title":"TreeSelect","description":"","frontmatter":{"title":"TreeSelect","lang":"en-US"},"headers":[{"level":2,"title":"Basic usage","slug":"basic-usage"},{"level":2,"title":"Select any level","slug":"select-any-level"},{"level":2,"title":"Multiple Selection","slug":"multiple-selection"},{"level":2,"title":"Disabled Selection","slug":"disabled-selection"},{"level":2,"title":"Filterable","slug":"filterable"},{"level":2,"title":"Custom content","slug":"custom-content"},{"level":2,"title":"LazyLoad","slug":"lazyload"},{"level":2,"title":"Attributes","slug":"attributes"}],"relativePath":"zh-CN/component/tree-select.md"}',s={},o=l('<h1 id="treeselect" tabindex="-1">TreeSelect <a class="header-anchor" href="#treeselect" aria-hidden="true">#</a></h1><p>The tree selector of the dropdown menu, it combines the functions of components <code>el-tree</code> and <code>el-select</code>.</p><h2 id="basic-usage" tabindex="-1">Basic usage <a class="header-anchor" href="#basic-usage" aria-hidden="true">#</a></h2><p>Selector for tree structures.</p><h2 id="select-any-level" tabindex="-1">Select any level <a class="header-anchor" href="#select-any-level" aria-hidden="true">#</a></h2><p>When using the <code>check-strictly=true</code> attribute, any node can be checked, otherwise only leaf nodes are supported.</p><h2 id="multiple-selection" tabindex="-1">Multiple Selection <a class="header-anchor" href="#multiple-selection" aria-hidden="true">#</a></h2><p>Multiple selection using clicks or checkbox.</p><h2 id="disabled-selection" tabindex="-1">Disabled Selection <a class="header-anchor" href="#disabled-selection" aria-hidden="true">#</a></h2><p>Disable options using the disabled field.</p><h2 id="filterable" tabindex="-1">Filterable <a class="header-anchor" href="#filterable" aria-hidden="true">#</a></h2><p>Use keyword filtering or custom filtering methods. <code>filterMethod</code> can custom filter method for data, <code>filterNodeMethod</code> can custom filter method for data node.</p><h2 id="custom-content" tabindex="-1">Custom content <a class="header-anchor" href="#custom-content" aria-hidden="true">#</a></h2><p>Contents of custom tree nodes.</p><h2 id="lazyload" tabindex="-1">LazyLoad <a class="header-anchor" href="#lazyload" aria-hidden="true">#</a></h2><p>Lazy loading of tree nodes, suitable for large data lists.</p><h2 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-hidden="true">#</a></h2><p>Since this component combines the functions of components <code>el-tree</code> and <code>el-select</code>, the original properties have not been changed, so no repetition here, and please go to the original component to view the documentation.</p><table><thead><tr><th>Attributes</th><th>Methods</th><th>Events</th><th>Slots</th></tr></thead><tbody><tr><td><a href="./tree.html#attributes">tree</a></td><td><a href="./tree.html#method">tree</a></td><td><a href="./tree.html#events">tree</a></td><td><a href="./tree.html#slots">tree</a></td></tr><tr><td><a href="./select.html#select-attributes">select</a></td><td><a href="./select.html#methods">select</a></td><td><a href="./select.html#select-events">select</a></td><td><a href="./select.html#select-slots">select</a></td></tr></tbody></table>',19),r=[o];function i(d,c,n,h,u,p){return a(),t("div",null,r)}var m=e(s,[["render",i]]);export{b as __pageData,m as default};
